#pragma checksum "D:\zmq\GitHub\VehicleHub_Blazor\BlazorCRUD\Pages\FetchManufacturers.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1a43bdc4312d4b13ff041ab53a618fefd37b828b"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorCRUD.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\zmq\GitHub\VehicleHub_Blazor\BlazorCRUD\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\zmq\GitHub\VehicleHub_Blazor\BlazorCRUD\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\zmq\GitHub\VehicleHub_Blazor\BlazorCRUD\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\zmq\GitHub\VehicleHub_Blazor\BlazorCRUD\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\zmq\GitHub\VehicleHub_Blazor\BlazorCRUD\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\zmq\GitHub\VehicleHub_Blazor\BlazorCRUD\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\zmq\GitHub\VehicleHub_Blazor\BlazorCRUD\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\zmq\GitHub\VehicleHub_Blazor\BlazorCRUD\_Imports.razor"
using BlazorCRUD;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\zmq\GitHub\VehicleHub_Blazor\BlazorCRUD\_Imports.razor"
using BlazorCRUD.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\zmq\GitHub\VehicleHub_Blazor\BlazorCRUD\Pages\FetchManufacturers.razor"
using BlazorCRUD.Entities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\zmq\GitHub\VehicleHub_Blazor\BlazorCRUD\Pages\FetchManufacturers.razor"
using BlazorCRUD.Contracts;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/manufacturers")]
    public partial class FetchManufacturers : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 103 "D:\zmq\GitHub\VehicleHub_Blazor\BlazorCRUD\Pages\FetchManufacturers.razor"
                   
                List<Manufacturer> manufacturersModel;
                Manufacturer selectedManufacturer;
                string editMessage;

                protected override async Task OnInitializedAsync()
                {
                    manufacturersModel = await manufacturersManager.ListAll();
                    selectedManufacturer = null;
                    editMessage = string.Empty;
                }

                protected void AddManufacturer()
                {
                    selectedManufacturer = new Manufacturer();
                    editMessage = "New Manufacturer";
                }


                protected async Task DeleteManufacturer(int id)
                {
                    await manufacturersManager.Delete(id);
                    manufacturersModel = await manufacturersManager.ListAll();
                }

                protected void EditManufacturer(Manufacturer manufacturer)
                {
                    selectedManufacturer = manufacturer;
                    editMessage = string.Concat("Manufacturer Id = ", manufacturer.ID);
                }

                protected async Task UpdateManufacturer(Manufacturer manufacturer)
                {
                    if (manufacturer.ID > 0)
                    {
                        await manufacturersManager.Update(manufacturer);
                    }
                    else
                    {
                        await manufacturersManager.Create(manufacturer);
                    }
                    await OnInitializedAsync();
                }

                protected async Task Cancel()
                {
                    await OnInitializedAsync();
                }

                protected async void HandleValidSubmit()
                {
                    if (selectedManufacturer != null)
                    {
                        await UpdateManufacturer(selectedManufacturer);

                    }
                }

                private bool isSortedAscending;
                private string activeSortColumn;

                private void SortTable(string columnName)
                {
                    if (columnName != activeSortColumn)
                    {
                        manufacturersModel = manufacturersModel.OrderBy(x => x.GetType().GetProperty(columnName).GetValue(x, null)).ToList();
                        isSortedAscending = true;
                        activeSortColumn = columnName;

                    }
                    else
                    {
                        if (isSortedAscending)
                        {
                            manufacturersModel = manufacturersModel.OrderByDescending(x => x.GetType().GetProperty(columnName).GetValue(x, null)).ToList();
                        }
                        else
                        {
                            manufacturersModel = manufacturersModel.OrderBy(x => x.GetType().GetProperty(columnName).GetValue(x, null)).ToList();
                        }

                        isSortedAscending = !isSortedAscending;
                    }
                }

                private string SetSortIcon(string columnName)
                {
                    if (activeSortColumn != columnName)
                    {
                        return string.Empty;
                    }
                    if (isSortedAscending)
                    {
                        return "fa-sort-up";
                    }
                    else
                    {
                        return "fa-sort-down";
                    }
                }

            

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IManufacturersManager manufacturersManager { get; set; }
    }
}
#pragma warning restore 1591
